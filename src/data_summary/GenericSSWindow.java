/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GenericSpreadsheetWindow.java
 *
 * Created on 17/09/2010, 8:46:18 PM
 */

package data_summary;

import javax.swing.table.TableColumn;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ragil
 */
public class GenericSSWindow extends javax.swing.JFrame {

    private DefaultTableModel dtm;
    private int[] defaultSize;

    /** Creates new form GenericSpreadsheetWindow */
    public GenericSSWindow(DefaultTableModel dtm, String title, boolean calculate, int[] defaultSize) {
        this.dtm = dtm;
        initComponents();
        this.setTitle(title);
        this.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        this.defaultSize = defaultSize;

        setComboBox();
        resetSize();

        if (!calculate) {
            pluginButton.setEnabled(false);
            pluginSelection.setEnabled(false);
        }
    }

    /** Creates new form GenericSpreadsheetWindow */
    public GenericSSWindow(DefaultTableModel dtm, String title, boolean calculate) {
        this(dtm, title, calculate, new int[0]);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        yMeanSelection = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        yErrSelection = new javax.swing.JComboBox();
        yBox = new javax.swing.JCheckBox();
        xBox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        xMeanSelection = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        xErrSelection = new javax.swing.JComboBox();
        pluginButton = new javax.swing.JButton();
        pluginSelection = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(dtm);
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Graph");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Mean");
        jLabel1.setName("jLabel1"); // NOI18N

        yMeanSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        yMeanSelection.setName("yMeanSelection"); // NOI18N

        jLabel2.setText("Error");
        jLabel2.setName("jLabel2"); // NOI18N

        yErrSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        yErrSelection.setName("yErrSelection"); // NOI18N

        yBox.setText("Use Y");
        yBox.setName("yBox"); // NOI18N

        xBox.setText("Use X");
        xBox.setName("xBox"); // NOI18N

        jLabel3.setText("Mean");
        jLabel3.setName("jLabel3"); // NOI18N

        xMeanSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        xMeanSelection.setName("xMeanSelection"); // NOI18N

        jLabel4.setText("Error");
        jLabel4.setName("jLabel4"); // NOI18N

        xErrSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        xErrSelection.setName("xErrSelection"); // NOI18N

        pluginButton.setText("Calculate");
        pluginButton.setName("pluginButton"); // NOI18N
        pluginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pluginButtonActionPerformed(evt);
            }
        });

        pluginSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pluginSelection.setName("pluginSelection"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pluginSelection, 0, 156, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pluginButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(xBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xMeanSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(2, 2, 2)
                        .addComponent(xErrSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(yBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yMeanSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(2, 2, 2)
                        .addComponent(yErrSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(yErrSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(yMeanSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)
                        .addComponent(yBox))
                    .addComponent(xErrSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(xMeanSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3)
                        .addComponent(xBox)
                        .addComponent(pluginButton)
                        .addComponent(pluginSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        plotGraph();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pluginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pluginButtonActionPerformed
        DSFunctions.calcUsingFormula(null, getAllSelectedRow(), new int[0]);
    }//GEN-LAST:event_pluginButtonActionPerformed

    private int[] getAllSelectedRow()    {
        int numRow = jTable1.getRowCount();
        int total = 0;

        // counter the number of selected Row;
        for (int i = 0; i < numRow; i++)    {
            if ((Boolean)jTable1.getValueAt(i, 2))
                total++;
        }

        if (total == 0)
            return null;

        int[] result = new int[total];
        int counter = 0;

        // insert the rows that are selected
        for (int i = 0; i < numRow; i++)    {
            if ((Boolean)jTable1.getValueAt(i, 2))
                result[counter++] = i;
        }

        return result;
    }

    private void plotGraph()    {

        if (!xBox.isSelected())    {
            System.err.println("select x-axis");
            javax.swing.JOptionPane.showMessageDialog(null, "Select x-axis.", "No selection",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!yBox.isSelected())    {
            System.err.println("select y-axis");
            javax.swing.JOptionPane.showMessageDialog(null, "Select y-axis.", "No selection",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (yMeanSelection.getSelectedIndex() == 0 && xBox.isSelected() ||
                xMeanSelection.getSelectedIndex() == 0 && yBox.isSelected())   {
            javax.swing.JOptionPane.showMessageDialog(null, "Select appropriate columns.", "No selection",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        int[] selectedRows = getSelectedRow();

        if (selectedRows == null)   {
            javax.swing.JOptionPane.showMessageDialog(null, "You must select atleast 1 input file to plot.\n" +
                    "Select by checking the checkboxes\n",
                    "No files selected", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        int ymean = yMeanSelection.getSelectedIndex();
        int yerror = yErrSelection.getSelectedIndex();
        int xmean = xMeanSelection.getSelectedIndex();
        int xerror = xErrSelection.getSelectedIndex();

        String[] legend = {"STD", "USE"};
        // 0 std - 1 use
        double[][][] data = new double[2][6][];
        for (int i = 0; i < 6; i++) {
            data[0][i] = new double[selectedRows.length];
            data[1][i] = new double[0];
        }

        for (int i = 0; i < selectedRows.length; i++)   {
            // x min max y min max
            double xmid;
            double xerr;
            double ymid;
            double yerr;

            try {
                if (xmean != nullIndex && xBox.isSelected())  {
                     xmid = Double.parseDouble(dtm.getValueAt(i, xmean-1).toString());
                     if (xerror != nullIndex)   {
                         xerr = Double.parseDouble(dtm.getValueAt(i, xerror-1).toString());
                         xerr = xerr / 100 * xmid;
                     } else {
                         xerr = 0;
                     }
                } else  {
                    xmid = i;
                    xerr = 0;
                }

                if (ymean != nullIndex && yBox.isSelected())  {
                     ymid = Double.parseDouble(dtm.getValueAt(i, ymean-1).toString());
                     if (yerror != nullIndex)   {
                         yerr = Double.parseDouble(dtm.getValueAt(i, yerror-1).toString());
                         yerr = yerr / 100 * ymid;
                     } else {
                         yerr = 0;
                     }
                } else  {
                    ymid = i;
                    yerr = 0;
                }

            } catch (Exception e)   {
                e.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(null, "Cannot plot graph.\nCheck input selection.", "Wrong Selection", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            data[0][0][i] = xmid;
            data[0][1][i] = xmid - xerr;
            data[0][2][i] = xmid + xerr;
            data[0][3][i] = ymid;
            data[0][4][i] = ymid - yerr;
            data[0][5][i] = ymid + yerr;
        }

        graph.jfreecharts.GraphFrontEnd.plotData(null, xMeanSelection.getSelectedItem().toString(),
                yMeanSelection.getSelectedItem().toString(), legend, data);
    }

    private int[] getSelectedRow()   {
        int[] result = new int[dtm.getRowCount()];
        for (int i = 0; i < result.length; i++)
            result[i] = i;
        return result;
    }

    public void setComboBox()  {
        int numCol = dtm.getColumnCount();

        if (numCol == 0)
            return;
        
        String[] colTitle = new String[numCol];
        for (int i = 0; i < numCol; i++)    {
            colTitle[i] = dtm.getColumnName(i);
        }

        yMeanSelection.removeAllItems();
        yErrSelection.removeAllItems();
        xMeanSelection.removeAllItems();
        xErrSelection.removeAllItems();

        yErrSelection.addItem(nullValue);
        yMeanSelection.addItem(nullValue);
        xErrSelection.addItem(nullValue);
        xMeanSelection.addItem(nullValue);

        for (int i = 0; i < numCol; i++)    {
            yErrSelection.addItem(colTitle[i]);
            yMeanSelection.addItem(colTitle[i]);
            xErrSelection.addItem(colTitle[i]);
            xMeanSelection.addItem(colTitle[i]);
        }
    }

    public void resetSize()    {
        DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
        dtcr.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        TableColumn column = null;
        int numCol = dtm.getColumnCount();
        for (int i = 0; i < numCol; i++) {
            column = jTable1.getColumnModel().getColumn(i);
            column.setPreferredWidth(i >= defaultSize.length ? 125 : defaultSize[i]);
            //jTable1.setDefaultRenderer(jTable1.getColumnClass(i), dtcr);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton pluginButton;
    private javax.swing.JComboBox pluginSelection;
    private javax.swing.JCheckBox xBox;
    private javax.swing.JComboBox xErrSelection;
    private javax.swing.JComboBox xMeanSelection;
    private javax.swing.JCheckBox yBox;
    private javax.swing.JComboBox yErrSelection;
    private javax.swing.JComboBox yMeanSelection;
    // End of variables declaration//GEN-END:variables

    private static final String nullValue = "NULL Field";
    private static final int nullIndex = 0;
}
